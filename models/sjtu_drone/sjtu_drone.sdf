<?xml version='1.0'?>
<sdf version='1.4'>
<model name='sjtu_drone'>
   <!-- model plugins should be put in the front of the sensor plugins! 
	This might be a bug~
	-->
    <plugin name='simple_drone' filename='libplugin_drone.so'>
        <bodyName>base_link</bodyName>
        <imuTopic>/drone/imu</imuTopic>
        <rollpitchProportionalGain>10.0</rollpitchProportionalGain>
        <rollpitchDifferentialGain>5.0</rollpitchDifferentialGain>
        <rollpitchLimit>0.5</rollpitchLimit>
        <yawProportionalGain>2.0</yawProportionalGain>
        <yawDifferentialGain>1.0</yawDifferentialGain>
        <yawLimit>1.5</yawLimit>
        <velocityXYProportionalGain>5.0</velocityXYProportionalGain>
        <velocityXYDifferentialGain>2.3</velocityXYDifferentialGain>
        <velocityXYLimit>2</velocityXYLimit>
        <velocityZProportionalGain>5.0</velocityZProportionalGain>
        <velocityZDifferentialGain>1.0</velocityZDifferentialGain>
        <velocityZLimit>-1</velocityZLimit>
        <positionXYProportionalGain>1.1</positionXYProportionalGain>
        <positionXYDifferentialGain>0.0</positionXYDifferentialGain>
        <positionXYIntegralGain>0.0</positionXYIntegralGain>
        <positionXYLimit>5</positionXYLimit>
        <positionZProportionalGain>1.0</positionZProportionalGain>
        <positionZDifferentialGain>0.2</positionZDifferentialGain>
        <positionZLimit>-1</positionZLimit>
        <maxForce>30</maxForce>
        <motionSmallNoise>0.05</motionSmallNoise>
        <motionDriftNoise>0.03</motionDriftNoise>
        <motionDriftNoiseTime>5.0</motionDriftNoiseTime>
    </plugin>

     <!-- pose of the quadrotor in the world frame -->
     <pose>0 0 0.04 0 0 0</pose>
      <link name='base_link'>
      <inertial>
        <mass>1.477</mass>
	<pose>0 0 0 0 0 0</pose>
	<inertia>
	<ixx>0.1152</ixx>
	<ixy>0</ixy>
	<ixz>0</ixz>
	<iyy>0.1152</iyy>
	<iyz>0</iyz>
	<izz>0.218</izz>

	</inertia>
      </inertial>

      <visual name='visual'>
        <geometry>
	  <mesh><uri>model://sjtu_drone/quadrotor_4.dae</uri></mesh>
        </geometry>
      </visual>

      <collision name='collision'>
        <geometry>
	<mesh><uri>model://sjtu_drone/quadrotor_4.dae</uri></mesh>
        </geometry>
      </collision>

      <gravity>1</gravity>
    
    
    <!-- Add a ray sensor, and give it a name -->
    <sensor type="ray" name="laser_scan">

      <!-- Position the ray sensor based on the specification. Also rotate
          it by 90 degrees around the X-axis so that the <horizontal> rays
          become vertical -->
      <pose>0.4 0 -0.004645 1.5707 0 0</pose>

      <!-- Enable visualization to see the rays in the GUI -->
      <visualize>0</visualize>

      <!-- Set the update rate of the sensor -->
      <update_rate>30</update_rate>
      <ray>

        <!-- The scan element contains the horizontal and vertical beams.
            We are leaving out the vertical beams for this tutorial. -->
        <scan>

          <!-- The horizontal beams -->
          <horizontal>
            <!-- The velodyne has 32 beams(samples) -->
            <!-- <samples>32</samples> -->
            <samples>5</samples>

            <!-- Resolution is multiplied by samples to determine number of
                simulated beams vs interpolated beams. See:
                http://sdformat.org/spec?ver=1.6&elem=sensor#horizontal_resolution
                -->
            <resolution>1</resolution>

            <!-- Minimum angle in radians -->
            <min_angle>-1.57</min_angle>
            <!-- Maximum angle in radians -->
            <max_angle>1.57</max_angle>
          </horizontal>
          <vertical>
            <!-- The velodyne has 32 beams(samples) -->
            <!-- <samples>32</samples> -->
            <samples>5</samples>

            <!-- Resolution is multiplied by samples to determine number of
                simulated beams vs interpolated beams. See:
                http://sdformat.org/spec?ver=1.6&elem=sensor#horizontal_resolution
                -->
            <resolution>1</resolution>

            <!-- Minimum angle in radians -->
            <min_angle>-1.57</min_angle>
            <!-- Maximum angle in radians -->
            <max_angle>1.57</max_angle>
          </vertical>

        </scan>

        <!-- Range defines characteristics of an individual beam -->
        <range>

          <!-- Minimum distance of the beam -->
          <min>0.05</min>

          <!-- Maximum distance of the beam -->
          <max>70</max>

          <!-- Linear resolution of the beam -->
          <resolution>0.02</resolution>
        </range>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/drone/laser</topicName>
        <frameName>base_link</frameName>
      </plugin>      
    </sensor>
    
  <!-- IMU sensor in 100fps -->
	<sensor name='sensor_imu' type='imu'>
	<always_on> 1 </always_on>
	<update_rate> 100 </update_rate>
	<pose> 0 0 0 0 0 0 </pose>
	<plugin name='ros_imu' filename='libplugin_ros_imu.so'>
	</plugin> 
	<imu>
		<noise>
		    <type>gaussian</type>
			<rate>
				<mean> 0 </mean>
				<stddev> 0 </stddev>
			</rate>
			<accel>
				<mean> 0 </mean>
				<stddev> 0.00 </stddev>
			</accel>
		</noise>
	</imu>
	</sensor>
     </link> 
</model>
</sdf>
